{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,KAAK,CACtB,EAAS,EAAE,CAEhB,EAAG,GAAO,OAAO,CAAC,SAAC,CAAnB,EAGC,AAFmB,EAAK,gBAAgB,CAAC,SAE9B,OAAO,CAAC,SAAC,CAApB,EACE,EAAO,IAAI,CAAC,EACd,EACF,GAKC,EAAG,GAAQ,OAAO,CAAC,SAAC,CAApB,EACC,IAAM,EAAe,SAAS,aAAa,CAAC,SACtC,EAAU,EAAM,EAAE,CAClB,EAAY,EAAM,IAAI,CAAC,WAAW,GAClC,EAAc,EAAM,IAAI,CAE9B,EAAa,SAAS,CAAC,GAAG,CAAC,eAC3B,EAAa,YAAY,CAAC,MAAO,GACjC,EAAa,WAAW,CAAG,EAE3B,EAAM,WAAW,CAZjB,AAY+B,EAZ1B,KAAK,CAAC,EAAG,GAAG,WAAW,GAAK,AAYF,EAZO,KAAK,CAAC,GAAG,WAAW,GAa1D,EAAM,aAAa,CAAC,MAAM,CAAC,EAC7B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar forms = document.forms;\nvar inputs = [];\n_to_consumable_array(forms).forEach(function(form) {\n    var formInputs = form.querySelectorAll(\"input\");\n    formInputs.forEach(function(input) {\n        inputs.push(input);\n    });\n});\nvar capitalize = function(text) {\n    return text.slice(0, 1).toUpperCase() + text.slice(1).toLowerCase();\n};\n_to_consumable_array(inputs).forEach(function(input) {\n    var labelElement = document.createElement(\"label\");\n    var inputId = input.id;\n    var inputName = input.name.toUpperCase();\n    var placeholder = input.name;\n    labelElement.classList.add(\"field-label\");\n    labelElement.setAttribute(\"for\", inputId);\n    labelElement.textContent = inputName;\n    input.placeholder = capitalize(placeholder);\n    input.parentElement.append(labelElement);\n});\n\n//# sourceMappingURL=index.363e8d6e.js.map\n","'use strict';\n\nconst forms = document.forms;\nconst inputs = [];\n\n[...forms].forEach((form) => {\n  const formInputs = form.querySelectorAll('input');\n\n  formInputs.forEach((input) => {\n    inputs.push(input);\n  });\n});\n\nconst capitalize = (text) =>\n  text.slice(0, 1).toUpperCase() + text.slice(1).toLowerCase();\n\n[...inputs].forEach((input) => {\n  const labelElement = document.createElement('label');\n  const inputId = input.id;\n  const inputName = input.name.toUpperCase();\n  const placeholder = input.name;\n\n  labelElement.classList.add('field-label');\n  labelElement.setAttribute('for', inputId);\n  labelElement.textContent = inputName;\n\n  input.placeholder = capitalize(placeholder);\n  input.parentElement.append(labelElement);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forms","document","inputs","forEach","form","formInputs","querySelectorAll","input","push","labelElement","createElement","inputId","id","inputName","toUpperCase","placeholder","classList","add","setAttribute","textContent","text","toLowerCase","parentElement","append"],"version":3,"file":"index.363e8d6e.js.map"}